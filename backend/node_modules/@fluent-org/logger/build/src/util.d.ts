export declare const awaitAtMost: <T>(promise: Promise<T>, timeout: number) => Promise<unknown>;
export declare const awaitNextTick: () => Promise<void>;
export declare const awaitTimeout: (timeout: number) => Promise<void>;
export interface DeferredPromise<T> {
    promise: Promise<T>;
    resolve(value?: T | PromiseLike<T>): void;
    reject(reason?: unknown): void;
}
export declare const pDefer: <T>() => DeferredPromise<T>;
